Reader	monad/reader.html#Reader	reader: Reader	
ask	monad/reader.html#ask,typedesc	reader: ask(S: typedesc): Reader[S, S]	
ask	monad/reader.html#ask	reader: ask[S](): Reader[S, S]	
toReader	monad/reader.html#toReader,T,typedesc	reader: toReader[T](value: T; S: typedesc): Reader[S, T]	
toReader	monad/reader.html#toReader,T	reader: toReader[S; T](value: T): Reader[S, T]	
run	monad/reader.html#run,Reader[S,T],S	reader: run[S; T](self: Reader[S, T]; state: S): T	
map	monad/reader.html#map,Reader[S,A],	reader: map[S; A; B](self: Reader[S, A]; f: A -&gt; B): Reader[S, B]	
flatMap	monad/reader.html#flatMap,Reader[S,A],	reader: flatMap[S; A; B](self: Reader[S, A]; f: A -&gt; Reader[S, B]): Reader[S, B]	
local	monad/reader.html#local,Reader[S,T],	reader: local[S; T](self: Reader[S, T]; f: S -&gt; S): Reader[S, T]	
